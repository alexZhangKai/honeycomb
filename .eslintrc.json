{
    "parser": "babel-eslint",
    "env": {
        "es6": true,
        "node": true,
        "react-native/react-native": true,
        "jest": true
    },
    "parserOptions": {
        "ecmaFeatures": {
            "experimentalObjectRestSpread": true,
            "jsx": true
        },
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "react-native",
        "import",
        "flowtype"
    ],
    "rules": {
        "indent": [
            "error",
            4,
            { "MemberExpression": 0 }
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "always"
        ],

        "getter-return": "error",
        "no-await-in-loop": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": ["error", "except-parens"],
        "no-constant-condition": ["error", { "checkLoops": false }],
        "no-control-regex": "error",
        "no-debugger": "warn",
        "no-dupe-args": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-obj-calls": "error",
        "no-prototype-builtins": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "use-isnan": "error",
        "valid-jsdoc": "off",
        "valid-typeof": "error",

        "array-callback-return": "error",
        "block-scoped-var": "error",
        "curly": ["error", "multi-or-nest"],
        "dot-location": ["error", "property"],
        "eqeqeq": ["error", "smart"],
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-else-return": ["error", { "allowElseIf": true }],
        "no-empty-pattern": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-lone-blocks": "error",
        "no-multi-spaces": ["error", { "exceptions": { "Property": true } }],
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true }],
        "no-unused-labels": "error",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "no-useless-escape": "error",
        "no-useless-return": "error",
        "no-void": "error",
        "no-warning-comments": ["warn", { "terms": ["todo", "fixme"], "location": "start" }],
        "no-with": "error",
        "prefer-promise-reject-errors": ["error", { "allowEmptyReject": true }],
        "require-await": "error",
        "wrap-iife": ["error", "inside", { "functionPrototypeMethods": true }],
        "no-delete-var": "error",
        "no-label-var": "error",
        "no-shadow-restricted-names": "error",
        "no-undef": "error",
        "no-unused-vars": "warn",
        "no-use-before-define": ["error", { "functions": false, "classes": true, "variables": false }],
        "no-buffer-constructor": "error",
        "no-path-concat": "error",

        "array-bracket-newline": ["error", { "multiline": true, "minItems": null }],
        "array-bracket-spacing": ["error", "never"],
        "block-spacing": ["error", "always"],
        "brace-style": ["error", "stroustrup"],
        "camelcase": ["error", { "properties": "always" }],
        "comma-dangle": ["error", "never"],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "eol-last": ["error", "always"],
        "func-call-spacing": ["error", "never"],
        "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
        "function-paren-newline": ["error", "multiline"],
        "implicit-arrow-linebreak": ["error", "beside"],
        "key-spacing": ["error", { "beforeColon": false, "afterColon": true, "mode": "strict" }],
        "keyword-spacing": ["error", { "before": true, "after": true }],
        "lines-between-class-members": ["error", "always"],
        "multiline-ternary": ["error", "always-multiline"],
        "new-parens": "error",
        "no-array-constructor": "error",
        "no-lonely-if": "error",
        "no-mixed-operators": ["error", { "allowSamePrecedence": false }],
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-assign": "error",
        "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1, "maxBOF": 0 }],
        "no-new-object": "error",
        "no-tabs": "error",
        "no-trailing-spaces": "error",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": ["error", "beside"],
        "object-curly-newline": ["error", { "consistent": true }],
        "object-curly-spacing": ["error", "always"],
        "object-property-newline": ["error", { "allowMultiplePropertiesPerLine": true }],
        "operator-assignment": ["error", "always"],
        "operator-linebreak": ["error", "before"],
        "padded-blocks": ["error", "never"],
        "quote-props": ["error", "as-needed"],
        "semi-spacing": ["error", {"before": false, "after": true}],
        "semi-style": ["error", "last"],
        "space-before-blocks": ["error", { "functions": "always", "keywords": "always", "classes": "always" }],
        "space-before-function-paren": ["error", "never"],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": "error",
        "space-unary-ops": ["error", { "words": true, "nonwords": false }],
        "spaced-comment": ["error", "always"],
        "switch-colon-spacing": ["error", { "after": true, "before": false }],
        "template-tag-spacing": "error",
        "unicode-bom": ["error", "never"],

        "arrow-body-style": ["error", "as-needed"],
        "arrow-parens": ["error", "always"],
        "arrow-spacing": ["error", { "before": true, "after": true }],
        "constructor-super": "error",
        "generator-star-spacing": ["error", { "before": true, "after": true }],
        "no-class-assign": "error",
        "no-const-assign": "error",
        "no-dupe-class-members": "error",
        "no-new-symbol": "error",
        "no-this-before-super": "error",
        "no-useless-computed-key": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "object-shorthand": ["error", "always", { "avoidQuotes": true }],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-destructuring": ["error", { "object": true, "array": false }],
        "prefer-numeric-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "require-yield": "error",
        "rest-spread-spacing": ["error", "never"],
        "template-curly-spacing": ["error", "never"],
        "yield-star-spacing": ["error", { "before": true, "after": true }],

        "react/default-props-match-prop-types": "error",
        "react/display-name": "error",
        "react/forbid-elements": ["error", { "forbid": [] }],
        "react/forbid-foreign-prop-types": "warn",
        "react/forbid-prop-types": ["warn", { "forbid": ["any", "array", "object"] }],
        "react/jsx-boolean-value": ["error", "always"],
        "react/jsx-closing-bracket-location": "error",
        "react/jsx-closing-tag-location": "error",
        "react/jsx-curly-brace-presence": ["error", { "props": "always", "children": "ignore" }],
        "react/jsx-curly-spacing": "error",
        "react/jsx-equals-spacing": "error",
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
        "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
        "react/jsx-handler-names": ["error", { "eventHandlerPropPrefix": "on", "eventHandlerPrefix": "handle" }],
        "react/jsx-indent": ["error", 4],
        "react/jsx-indent-props": ["error", 4],
        "react/jsx-key": "error",
        "react/jsx-max-props-per-line": ["error", { "maximum": 1, "when": "multiline" }],
        "react/jsx-no-bind": ["error", { "allowArrowFunctions": true, "allowBind": true }],
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-literals": ["warn", { "noStrings": true }],
        "react/jsx-no-undef": "error",
        "react/jsx-one-expression-per-line": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-tag-spacing": ["error", { "beforeSelfClosing": "always", "closingSlash": "never", "afterOpening": "never" }],
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/jsx-wrap-multilines": ["error", { "declaration": "parens-new-line", "assignment": "parens-new-line", "return": "parens-new-line", "arrow": "parens", "condition": "parens-new-line", "logical": "parens-new-line", "prop": "parens-new-line" }],
        "react/no-access-state-in-setstate": "error",
        "react/no-array-index-key": "error",
        "react/no-children-prop": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": ["warn", "disallow-in-func"],
        "react/no-did-update-set-state": ["warn", "disallow-in-func"],
        "react/no-direct-mutation-state": "error",
        "react/no-is-mounted": "error",
        "react/no-multi-comp": "error",
        "react/no-redundant-should-component-update": "error",
        "react/no-render-return-value": "error",
        "react/no-string-refs": "error",
        "react/no-typos": "error",
        "react/no-unescaped-entities": "error",
        "react/no-unknown-property": "error",
        "react/no-unused-prop-types": "warn",
        "react/no-unused-state": "warn",
        "react/no-will-update-set-state": ["warn", "disallow-in-func"],
        "react/prefer-es6-class": ["error", "always"],
        "react/prop-types": "error",
        "react/react-in-jsx-scope": "error",
        "react/require-optimization": "off",
        "react/require-render-return": "error",
        "react/self-closing-comp": "error",
        "react/sort-comp": [
            "error",
            {
                "order": [
                    "static-methods",
                    "lifecycle",
                    "everything-else",
                    "render"
                ],
                "groups": {
                    "lifecycle": [
                        "displayName",
                        "propTypes",
                        "contextTypes",
                        "childContextTypes",
                        "mixins",
                        "statics",
                        "defaultProps",
                        "type-annotations",
                        "instance-variables",
                        "constructor",
                        "getDefaultProps",
                        "getInitialState",
                        "state",
                        "getChildContext",
                        "componentWillMount",
                        "componentDidMount",
                        "componentWillReceiveProps",
                        "shouldComponentUpdate",
                        "componentWillUpdate",
                        "componentDidUpdate",
                        "componentWillUnmount",
                        "lifecycle",
                        "instance-methods",
                        "everything-else",
                        "render"
                    ]
                }
            }
        ],
        "react/sort-prop-types": ["error", { "callbacksLast": true, "requiredFirst": true }],
        "react/style-prop-object": "error",

        "react-native/no-unused-styles": "error",
        "react-native/no-inline-styles": "error",
        "react-native/no-color-literals": "warn",

        "import/no-duplicates": "error",

        "flowtype/boolean-style": ["error", "boolean"],
        "flowtype/define-flow-type": "error",
        "flowtype/delimiter-dangle": ["error", "never"],
        "flowtype/generic-spacing": ["error", "never"],
        "flowtype/no-dupe-keys": "error",
        "flowtype/no-primitive-constructor-types": "error",
        "flowtype/no-weak-types": ["error", {
           "any": false,
           "Object": true,
           "Function": true
       }],
       "flowtype/object-type-delimiter": ["error", "comma"],
       "flowtype/require-valid-file-annotation": ["warn", "always", { "annotationStyle": "line" }],
       "flowtype/semi": ["error", "never"],
       "flowtype/space-after-type-colon": ["error", "always", { "allowLineBreak": false }],
       "flowtype/space-before-type-colon": ["error", "never"],
       "flowtype/space-before-generic-bracket": ["error", "never"],
       "flowtype/union-intersection-spacing": ["error", "always"],
       "flowtype/use-flow-type": "error"
    },
    "settings": {
        "flowVersion": "0.57"
    }
}
